[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bob-google-maps"
version = "0.5.0"
description = "Enterprise-grade Google Maps scraper with business-only extraction and fault tolerance"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Divyanshu Singh Chouhan", email = "divyanshu@abcsteps.com"}
]
maintainers = [
    {name = "Divyanshu Singh Chouhan", email = "divyanshu@abcsteps.com"}
]
keywords = [
    "google-maps", "scraper", "business-intelligence", "data-extraction", 
    "selenium", "playwright", "fault-tolerance", "enterprise", "production-ready"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Office/Business",
    "Typing :: Typed"
]
requires-python = ">=3.8"
dependencies = [
    "selenium",
    "playwright",
    "beautifulsoup4",
    "lxml",
    "pydantic",
    "pandas",
    "numpy",
    "textblob",
    "nltk",
    "requests",
    "urllib3",
    "click",
    "tqdm",
    "rich",
    "pyyaml",
    "toml",
    "asyncio-throttle",
    "psutil",
    "memory-profiler",
    "openpyxl",
    "xlsxwriter",
    "structlog",
    "colorlog"
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "pytest-asyncio",
    "black",
    "flake8",
    "mypy",
    "bandit"
]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings[python]"
]
all = [
    "bob-google-maps[dev,docs]"
]

[project.urls]
Homepage = "https://github.com/div197/BOB-Google-Maps"
Documentation = "https://div197.github.io/BOB-Google-Maps/"
Repository = "https://github.com/div197/BOB-Google-Maps.git"
"Bug Tracker" = "https://github.com/div197/BOB-Google-Maps/issues"
Changelog = "https://github.com/div197/BOB-Google-Maps/blob/main/CHANGELOG.md"
"Funding" = "https://github.com/sponsors/div197"

[project.scripts]
bob = "bob_core.cli:main"
bob-health = "bob_core.health_cli:main"

[tool.setuptools]
packages = ["bob_core"]

[tool.setuptools.package-data]
bob_core = ["*.json", "*.yaml", "*.yml"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox"
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance benchmarks"
]

[tool.coverage.run]
source = ["bob_core"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.bandit]
exclude_dirs = ["tests", "venv", "env", ".venv"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_process_args

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["bob_core"]
known_third_party = ["selenium", "playwright", "pydantic", "pandas", "numpy"] 